
=pod

=head1 NAME

Bread::Board::Manual::HowAndWhy - A discussion of How and Why you should use Bread::Board

=head1 INTRODUCTION

Hopefully the L<Bread::Board::Manual::Concepts> document has
helped to introduce you the concepts in Bread::Board and how
you go about constructing containers and services. What we
really haven't explained though is why you would want to do
this and how you go about using this in your application.

=head1 WHY

Let me first say that Bread::Board and IoC in general is
not universally useful. Smaller applications and one-off scripts
would be overburdened by the abstractions of Bread::Board. But
the larger your application becomes, the more something like
Bread::Board can help.

As the complexity of your application grows, the management of
resources and their dependencies becomes more of a burden.
Making sure all your components are properly initialized,
in the right order and at all times that you need them, can
become a twisty maze. Bread::Board is intented to help you
manage this twisty maze and remove the need for you to
manage this manually.

Take your typical Catalyst application, the Catalyst framework
itself contains it's own mini IoC framework through the
component subsystem. Catalyst will manage your models and views
making sure that they will be available when you need them in
the controllers. Catalyst makes all this easy to manage through
it's configuration system. This is great inside your Catalyst
application, but what about outside of it? Any sufficiently
complex web application will have a set of scripts and/or
command-line applications to help support it. At this point
you are left to your own devices and must manage these
components and their dependency chains on your own.

By decoupling IoC into it's own stand-alone subsystem it
becomes possible to get that same ease-of-use you get inside
a Catalyst application, outside of it.

This is what Bread::Board aims to provide.

=head1 HOW

I<TODO>

=head1 AUTHOR

Stevan Little E<lt>stevan.little@iinteractive.comE<gt>

=head1 COPYRIGHT AND LICENSE

Copyright 2010 Infinity Interactive, Inc.

L<http://www.iinteractive.com>

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut
